(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./src/components/changableHeader/Header.js":
/*!**************************************************!*\
  !*** ./src/components/changableHeader/Header.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(/*! react-bootstrap */ \"./node_modules/react-bootstrap/es/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Header = function (_Component) {\n    _inherits(Header, _Component);\n\n    function Header(props) {\n        _classCallCheck(this, Header);\n\n        var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));\n\n        _this.state = {\n            show: false,\n            newTitle: _this.props.title\n        };\n        return _this;\n    }\n\n    _createClass(Header, [{\n        key: 'handleTitleSubmit',\n        value: function handleTitleSubmit() {\n            // code to handle input box submit - for example, issue an ajax request to change name in database\n            this.setState({ show: !this.state.show });\n        }\n    }, {\n        key: 'handleTitleChange',\n        value: function handleTitleChange(e) {\n            // code to change the name in form input box. newTitle is initialized as empty string. We need to\n            // update it with the string currently entered by user in the form\n            this.setState({ newTitle: e.target.value });\n        }\n    }, {\n        key: 'changeComponent',\n        value: function changeComponent() {\n            // this toggles the show variable which is used for dynamic UI\n            this.setState({ show: !this.state.show });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var clickableTitle;\n            if (this.state.show) {\n                clickableTitle = _react2.default.createElement(\n                    _reactBootstrap.Form,\n                    { inline: true, onSubmit: this.handleTitleSubmit.bind(this) },\n                    _react2.default.createElement(\n                        _reactBootstrap.FormGroup,\n                        { controlId: 'formInlineTitle' },\n                        _react2.default.createElement(_reactBootstrap.FormControl, { type: 'text', onChange: this.handleTitleChange.bind(this) })\n                    )\n                );\n            } else {\n                clickableTitle = _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(\n                        _reactBootstrap.Button,\n                        { bsStyle: 'link', onClick: this.changeComponent.bind(this) },\n                        _react2.default.createElement(\n                            'h3',\n                            null,\n                            this.state.newTitle\n                        )\n                    )\n                );\n            }\n            return _react2.default.createElement(\n                'div',\n                { className: 'comment' },\n                clickableTitle\n            );\n        }\n    }]);\n\n    return Header;\n}(_react.Component);\n\nexports.default = Header;\n\n\nHeader.defaultProps = {\n    title: 'Default Title'\n};\n\n//# sourceURL=webpack:///./src/components/changableHeader/Header.js?");

/***/ })

}]);